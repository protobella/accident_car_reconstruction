<?xml version="1.0" encoding="ISO-8859-15"?>
<launch>
  <arg name="voxel_size" default="0.20" />
  <arg name="voxels_per_side" default="16" />
  <arg name="world_frame" default="base_link" />
  <arg name="pointcloud_topic" default="/velodyne_points" />
  
  <node name="voxblox_node" pkg="voxblox_ros" type="tsdf_server" output="screen" args="-alsologtostderr" clear_params="true">
    <remap from="pointcloud" to="$(arg pointcloud_topic)"/>
    <remap from="voxblox_node/esdf_map_out" to="esdf_map" />

    <!-- <param name="tsdf_voxel_size" value="$(arg voxel_size)" />
    <param name="tsdf_voxels_per_side" value="$(arg voxels_per_side)" />
    <param name="publish_esdf_map" value="true" />
    <param name="publish_pointclouds" value="true" />
    <param name="use_tf_transforms" value="true" />
    <param name="update_mesh_every_n_sec" value="1.0" />
    <param name="clear_sphere_for_planning" value="true" />
    <param name="world_frame" value="$(arg world_frame)" />
    <param name="color_mode" value="normals" /> -->

    <param name="tsdf_voxel_size" value="0.1" />
    <param name="truncation_distance" value="0.5" />
    <param name="color_mode" value="normals" />
    <param name="enable_icp" value="true" />
    <param name="icp_refine_roll_pitch" value="false" />
    <param name="update_mesh_every_n_sec" value="1.0" />
    <param name="mesh_min_weight" value="2" />
    <param name="method" value="fast" />
    <param name="max_ray_length_m" value="10.0" />
    <param name="use_const_weight" value="true" />
    <param name="world_frame" value="$(arg world_frame)"/>
    <param name="verbose" value="true" />

    <param name="mesh_filename" value="$(find voxblox_ros)/mesh_results/accident.ply" />
  </node>
</launch>